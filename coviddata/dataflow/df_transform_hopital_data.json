{
	"name": "df_transform_hopital_data",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_hospital_raw_data",
						"type": "DatasetReference"
					},
					"name": "sourceHospitalData"
				},
				{
					"dataset": {
						"referenceName": "ds_dim_date_lookup_data",
						"type": "DatasetReference"
					},
					"name": "sourceDimDate"
				},
				{
					"dataset": {
						"referenceName": "ds_country_lookup",
						"type": "DatasetReference"
					},
					"name": "sourceCountry"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_processed_hospital_admission_daily",
						"type": "DatasetReference"
					},
					"name": "sinkDaily"
				},
				{
					"dataset": {
						"referenceName": "ds_processed_hospital_admission_weekly",
						"type": "DatasetReference"
					},
					"name": "sinkWeekly"
				}
			],
			"transformations": [
				{
					"name": "selectRequiredColumn"
				},
				{
					"name": "lookupCountry"
				},
				{
					"name": "selectRequiredFields"
				},
				{
					"name": "splitWeeklyFromDaily"
				},
				{
					"name": "DeriveECDCYearWeek"
				},
				{
					"name": "AggDimDate"
				},
				{
					"name": "JoinWithDate"
				},
				{
					"name": "PivotDaily"
				},
				{
					"name": "PivotWeekly"
				},
				{
					"name": "SortDaily"
				},
				{
					"name": "SortWeekly"
				},
				{
					"name": "selectWeekly"
				},
				{
					"name": "selectDaily"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as date,",
				"          year_week as string,",
				"          value as short,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceHospitalData",
				"source(output(",
				"          date_key as string,",
				"          date as string,",
				"          year as string,",
				"          month as string,",
				"          day as string,",
				"          day_name as string,",
				"          day_of_year as string,",
				"          week_of_month as string,",
				"          week_of_year as string,",
				"          month_name as string,",
				"          year_month as string,",
				"          year_week as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceDimDate",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceCountry",
				"sourceHospitalData select(mapColumn(",
				"          country,",
				"          indicator,",
				"          value,",
				"          source,",
				"          reported_date = date,",
				"          reported_year_week = year_week",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectRequiredColumn",
				"selectRequiredColumn, sourceCountry lookup(selectRequiredColumn@country == sourceCountry@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupCountry",
				"lookupCountry select(mapColumn(",
				"          country = selectRequiredColumn@country,",
				"          indicator,",
				"          value,",
				"          source,",
				"          reported_date,",
				"          reported_year_week,",
				"          country = sourceCountry@country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectRequiredFields",
				"selectRequiredFields split(like(indicator,'Daily%'),",
				"     indicator == 'Weekly new hospital admissions per 100k' || indicator == 'Weekly new ICU admissions per 100k',",
				"     disjoint: false) ~> splitWeeklyFromDaily@(Daily, Weekly, default)",
				"sourceDimDate derive(ecdc_year_week = year + '-W' + lpad(week_of_year, 2, '0')) ~> DeriveECDCYearWeek",
				"DeriveECDCYearWeek aggregate(groupBy(ecdc_year_week = year + '-W' + lpad(week_of_year, 2, '0')),",
				"     week_start_date = min(date),",
				"          week_end_date = max(date)) ~> AggDimDate",
				"splitWeeklyFromDaily@Weekly, AggDimDate join(reported_year_week == ecdc_year_week,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinWithDate",
				"splitWeeklyFromDaily@Daily pivot(groupBy(country,",
				"          source,",
				"          reported_date,",
				"          reported_year_week,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population),",
				"     pivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),",
				"     count = sum(value),",
				"     columnNaming: '$V-$N',",
				"     lateral: true) ~> PivotDaily",
				"JoinWithDate pivot(groupBy(country,",
				"          source,",
				"          reported_date,",
				"          reported_year_week,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          week_start_date,",
				"          week_end_date),",
				"     pivotBy(indicator, ['Weekly new hospital admissions per 100k', 'Weekly new ICU admissions per 100k']),",
				"     count = sum(value),",
				"     columnNaming: '$V-$N',",
				"     lateral: true) ~> PivotWeekly",
				"PivotDaily sort(desc(reported_year_week, true),",
				"     asc(country, true)) ~> SortDaily",
				"PivotWeekly sort(desc(reported_date, true),",
				"     asc(country, true)) ~> SortWeekly",
				"SortWeekly select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_year_week,",
				"          reported_week_start_date = week_start_date,",
				"          reported_week_end_date = week_end_date,",
				"          new_hospital_occupancy_count = {Weekly new hospital admissions per 100k-count},",
				"          new_icu_occupancy_count = {Weekly new ICU admissions per 100k-count},",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectWeekly",
				"SortDaily select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          reported_date,",
				"          population,",
				"          Daily_hospital_occupancy_count = {Daily hospital occupancy-count},",
				"          Daily_icu_occupancy_count = {Daily ICU occupancy-count},",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectDaily",
				"selectDaily sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinkDaily",
				"selectWeekly sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinkWeekly"
			]
		}
	}
}